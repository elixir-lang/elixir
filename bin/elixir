#!/usr/bin/env escript
%%! 


main([]) ->
  io:format("Usage: ~s [switches] [files]

  -v              Prints version and exit
  -e \"command\"    Evaluates the given command (may be used more than once)
  -f \"command\"    The same as -e, but executes at the end (may be used more than once)
  --no-halt       Don't halt the process after the code is executed

* Each file passed will be loaded and executed.

* Options given after files are passed down to the executed file.

* Options can be passed to the erlang compiler by using ELIXIR_ERL_OPTS.~n", [escript:script_name()]),
  init:stop();

main(Args) ->
  ElixirBin = filename:join(filename:dirname(escript:script_name()), "../ebin"),
  code:add_pathz(ElixirBin), % This will work for local checkout and for common installation
  elixir:start(),
  CodeInit = elixir_constants:lookup('Code::Init'),
  'Code::Init':process_argv(CodeInit, Args),
  init:stop().
