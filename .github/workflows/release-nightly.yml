name: Release Nightly

on:
  push:
    branches:
      - iss-12038
      - main
      - v*.*

env:
  ELIXIR_OPTS: "--warnings-as-errors"
  ERLC_OPTS: "warnings_as_errors"
  LANG: C.UTF-8

jobs:
  publish_elixir:
    strategy:
      # TODO: fail-fast false?
      fail-fast: true
      matrix:
        include:
          - otp: 24
            otp_version: 24.3
          - otp: 25
            otp_version: 25.0
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        
      - uses: erlef/setup-beam@v1
        with:
          otp-version: 24.0
          version-type: strict
      - name: Build Elixir Release
        run: |
          make Precompiled.zip
          mv Precompiled.zip elixir-otp-${{ matrix.otp }}.zip
          shasum -a 1 elixir-otp-${{ matrix.otp }}.zip > elixir-otp-${{ matrix.otp }}.zip.sha1sum
          shasum -a 256 elixir-otp-${{ matrix.otp }}.zip > elixir-otp-${{ matrix.otp }}.zip.sha256sum
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: elixir-otp-${{ matrix.otp }}.zip
          path: elixir-otp-${{ matrix.otp }}.zip

  publish_doc:
    needs: publish_elixir
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        
      - uses: erlef/setup-beam@v1
        with:
          otp-version: 25.0
          version-type: strict
      - name: Download latest Elixir
        uses: actions/download-artifact@v3
        with:
          name: elixir-otp-25.zip
      - name: Setup Elixir
        run: |
          unzip elixir-otp-25.zip -d elixir-otp-25
          ls -lah
          echo "$PWD/elixir-otp-25/bin" >> $GITHUB_PATH
      - name: Get latest stable ExDoc version
        run: |
          EX_DOC_LATEST_STABLE_VERSION=$(curl -s https://hex.pm/api/packages/ex_doc | jq --raw-output '.latest_stable_version')
          echo "EX_DOC_LATEST_STABLE_VERSION=${EX_DOC_LATEST_STABLE_VERSION}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: elixir-lang/ex_doc
          ref: v${{ env.EX_DOC_LATEST_STABLE_VERSION }}
          path: ex_doc
      - name: Build ex_doc
        run: |
          mv ex_doc ../ex_doc
          cd ../ex_doc
          mix do local.rebar --force, local.hex --force, deps.get, compile
          cd ../elixir
      - name: Build Docs
        run: |
          make Docs.zip
      # TODO: make doc filename
      # TODO: install aws-cli
      # TODO: put docs to s3
