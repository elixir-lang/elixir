name: Release

on:
  push:
    tags:
      - v*

env:
  ELIXIR_OPTS: "--warnings-as-errors"
  ERLC_OPTS: "warnings_as_errors"
  LANG: C.UTF-8

permissions:
  contents: write

jobs:
  create_draft_release:
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Create draft release
        run: |
          gh release create \
            --repo ${{ github.repository }} \
            --title ${{ github.ref_name }} \
            --notes '' \
            --draft \
            ${{ github.ref_name }}
  release_pre_built:
    needs: create_draft_release
    strategy:
      fail-fast: true
      matrix:
        include:
          - otp: 24
            otp_version: 24.3
          - otp: 25
            otp_version: 25.0
            build_docs: build_docs
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - uses: ./.github/workflows/release_pre_built
        with:
          otp_version: ${{ matrix.otp_version }}
          otp: ${{ matrix.otp }}
          build_docs: ${{ matrix.build_docs }}
      - name: Upload Pre-built
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload --clobber "${{ github.ref_name }}" \
            elixir-otp-${{ matrix.otp }}.zip \
            elixir-otp-${{ matrix.otp }}.zip.sha{1,256}sum
      - name: Upload Docs to GitHub
        if: ${{ matrix.build_docs }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload --clobber "${{ github.ref_name }}" \
            Docs.zip \
            Docs.zip.sha{1,256}sum
      - name: Upload Precompiled to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.HEX_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.HEX_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.HEX_AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.HEX_AWS_S3_BUCKET }}
        run: |
          mv elixir-otp-${{ matrix.otp }}.zip elixir.zip
          version=$(echo ${{ github.ref_name }} | sed -e 's/^v//g')
          aws s3 cp elixir.zip "s3://s3.hex.pm/builds/elixir/${version}${{matrix.otp}}.zip" --cache-control "public,max-age=3600" --metadata '{"surrogate-key":"builds","surrogate-control":"public,max-age=604800"}'
