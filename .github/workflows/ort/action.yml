# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2021 The Elixir Team

name: "Run OSS Review Toolkit"
description: "Runs OSS Review Toolkit & generates SBoMs"
inputs:
  report-formats:
    description: "ORT Report Formats"
    required: true
  fail-on-violation:
    description: "Whether to fail on violation."
    required: false
    default: false
  upload-reports:
    description: "Whether to upload all reports"
    required: false
    default: false
  version:
    desctiption: "Elixir Version (Tag / SHA)"
    required: true

outputs:
  results-path:
    description: "See oss-review-toolkit/ort-ci-github-action action"
    value: "${{ steps.ort.outputs.results-path }}"
  results-sbom-cyclonedx-xml-path:
    description: "See oss-review-toolkit/ort-ci-github-action action"
    value: "${{ steps.ort.outputs.results-sbom-cyclonedx-xml-path }}"
  results-sbom-cyclonedx-json-path:
    description: "See oss-review-toolkit/ort-ci-github-action action"
    value: "${{ steps.ort.outputs.results-sbom-cyclonedx-json-path }}"
  results-sbom-spdx-yml-path:
    description: "See oss-review-toolkit/ort-ci-github-action action"
    value: "${{ steps.ort.outputs.results-sbom-spdx-yml-path }}"
  results-sbom-spdx-json-path:
    description: "See oss-review-toolkit/ort-ci-github-action action"
    value: "${{ steps.ort.outputs.results-sbom-spdx-json-path }}"

runs:
  using: "composite"
  steps:
    - name: Fetch Default ORT Config
      id: fetch-default-ort-config
      uses: actions/checkout@v4
      with:
        repository: oss-review-toolkit/ort-config
        ref: "main"
        path: ".ort-config"

    - name: Setup ORT Config
      id: setup-ort-config
      shell: bash
      run: |
        mkdir -p "/$HOME/.ort/"

        # Move Fetched Default Config into Place
        mv .ort-config "$HOME/.ort/config"
        
        # Append Global ORT Config
        cat .ort/config/config.yml >> "$HOME/.ort/config/config.yml"
        
        # Override Default Evaluator Rules
        cp .ort/config/evaluator.rules.kts "$HOME/.ort/config/evaluator.rules.kts"

        # Set Version in SPDX & Config
        sed -i "s/# elixir-version-insert/versionInfo: '${ELIXIR_VERSION}'/" project.spdx.yml
        sed -i -E "s/(\"SpdxDocumentFile:The Elixir Team:.+:)\"/\1${ELIXIR_VERSION}\"/" .ort.yml
        sed -i "s|https://github.com/elixir-lang/elixir.git|${ELIXIR_REPO}@${ELIXIR_VERSION}|" project.spdx.yml
      env:
        ELIXIR_VERSION: "${{ inputs.version }}"
        ELIXIR_REPO: "${{ github.server_url }}/${{ github.repository }}.git"

    - name: "Cache ScanCode"
      uses: actions/cache@v4
      with:
        path: "~/.cache/scancode-tk"
        key: ${{ runner.os }}-scancode

    - name: Run OSS Review Toolkit
      id: ort
      # TODO: Use released version once the following issue has been released:
      # * https://github.com/oss-review-toolkit/ort-ci-github-action/issues/37
      # * https://github.com/oss-review-toolkit/ort-ci-github-action/pull/41
      # * https://github.com/oss-review-toolkit/ort-ci-github-action/pull/43
      uses: oss-review-toolkit/ort-ci-github-action@2cda885c8eefaf92bab9f3e979b5d5a42970dfa4 # main
      with:
        image: ghcr.io/oss-review-toolkit/ort-minimal:51.1.0
        run: >-
          labels,
          cache-dependencies,
          cache-scan-results,
          analyzer,
          scanner,
          advisor,
          evaluator,
          reporter,
          ${{ inputs.upload-reports == 'true' && 'upload-results' || '' }}
        fail-on: "${{ inputs.fail-on-violation == 'true' && 'violations,issues' || '' }}"
        report-formats: "${{ inputs.report-formats }}"
        ort-cli-report-args: >-
          -O CycloneDX=output.file.formats=json,xml
          -O SpdxDocument=outputFileFormats=JSON,YAML
        sw-version: "${{ inputs.version }}"
